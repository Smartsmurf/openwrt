--- a/drivers/ata/pata_ftide010.c	2018-04-12 12:30:01.000000000 +0200
+++ b/drivers/ata/pata_ftide010.c	2018-05-06 03:06:51.823114128 +0200
@@ -122,10 +122,10 @@
 static const u8 mwdma_50_recovery_time[3] = {6, 2, 1};
 static const u8 mwdma_66_active_time[3] = {8, 3, 3};
 static const u8 mwdma_66_recovery_time[3] = {8, 2, 1};
-static const u8 udma_50_setup_time[6] = {3, 3, 2, 2, 1, 1};
+static const u8 udma_50_setup_time[6] = {3, 3, 2, 2, 1, 9};
 static const u8 udma_50_hold_time[6] = {3, 1, 1, 1, 1, 1};
-static const u8 udma_66_setup_time[7] = {4, 4, 3, 2, };
-static const u8 udma_66_hold_time[7] = {};
+static const u8 udma_66_setup_time[7] = {4, 4, 3, 2, 1, 9, 9};
+static const u8 udma_66_hold_time[7] = {4, 2, 1, 1, 1, 1, 1};
 
 /*
  * We set 66 MHz for all MWDMA modes
@@ -148,6 +148,8 @@
 	u8 timreg;
 	u8 i;
 
+	dev_info(ftide->dev, "ftide010_set_dmamode devno=%i, speed=%i\n", devno, speed);
+
 	/* Target device 0 (master) or 1 (slave) */
 	if (!devno) {
 		udma_en_mask = FTIDE010_CLK_MOD_DEV0_UDMA_EN;
@@ -221,6 +223,8 @@
 	struct ftide010 *ftide = ap->host->private_data;
 	u8 pio = adev->pio_mode - XFER_PIO_0;
 
+	dev_info(ftide->dev, "ftide010_set_piomode index=%i\n", pio);
+
 	dev_dbg(ftide->dev, "set PIO mode %02x, index %d\n",
 		adev->pio_mode, pio);
 	writeb(pio_active_time[pio] << 4 | pio_recovery_time[pio],
@@ -433,6 +437,37 @@
 
 	return 0;
 }
+
+static irqreturn_t gemini_pata_interrupt(int irq, void *dev)
+{
+	struct ata_host *host = dev;
+	unsigned int i; /* , handled = 0; */
+	unsigned long flags;
+
+	spin_lock_irqsave(&host->lock, flags);
+	for (i = 0; i < host->n_ports; i++) {
+		struct ata_port *ap = host->ports[i];
+		struct ata_queued_cmd *qc;
+		qc = ata_qc_from_tag(ap, ap->link.active_tag);
+
+		if (qc && (qc->tf.ctl & ATA_NIEN))
+			ap->ops->sff_check_status(ap);
+		else if (qc && (!(qc->tf.flags & ATA_TFLAG_POLLING)) &&
+				(qc->flags & ATA_QCFLAG_ACTIVE))
+			/* handled |= */ ata_bmdma_port_intr(ap, qc);
+		else
+			ap->ops->sff_check_status(ap);
+	}
+	spin_unlock_irqrestore(&host->lock, flags);
+
+	/* if (!handled) {
+		pr_err(DRV_NAME ": Unexpected interrupt\n");
+		handled = IRQ_HANDLED;
+	} */
+
+	return IRQ_RETVAL(IRQ_HANDLED); /* IRQ_RETVAL(handled); */
+}
+
 #else
 static int pata_ftide010_gemini_init(struct ftide010 *ftide,
 				     bool is_ata1)
@@ -520,8 +555,9 @@
 	dev_info(dev, "device ID %08x, irq %d, reg %pR\n",
 		 readl(ftide->base + FTIDE010_IDE_DEVICE_ID), irq, res);
 
-	ret = ata_host_activate(ftide->host, irq, ata_bmdma_interrupt,
+	ret = ata_host_activate(ftide->host, irq, gemini_pata_interrupt,
 				0, &pata_ftide010_sht);
+
 	if (ret)
 		goto err_dis_clk;
 
