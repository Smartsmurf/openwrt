--- a/drivers/ata/pata_ftide010.c	2018-04-12 12:30:01.000000000 +0200
+++ b/drivers/ata/pata_ftide010.c	2018-05-06 03:06:51.823114128 +0200
@@ -122,10 +122,10 @@
 static const u8 mwdma_50_recovery_time[3] = {6, 2, 1};
 static const u8 mwdma_66_active_time[3] = {8, 3, 3};
 static const u8 mwdma_66_recovery_time[3] = {8, 2, 1};
-static const u8 udma_50_setup_time[6] = {3, 3, 2, 2, 1, 1};
+static const u8 udma_50_setup_time[6] = {3, 3, 2, 2, 1, 9}; /* 3, 3, 2, 2, 1, 9 */
 static const u8 udma_50_hold_time[6] = {3, 1, 1, 1, 1, 1};
-static const u8 udma_66_setup_time[7] = {4, 4, 3, 2, };
-static const u8 udma_66_hold_time[7] = {};
+static const u8 udma_66_setup_time[7] = {4, 4, 3, 2, 1, 9, 9}; /* 4, 4, 3, 2, 1, 9, 9 */
+static const u8 udma_66_hold_time[7] =  {4, 2, 1, 1, 1, 1, 1}; /* 4, 2, 1, 1, 1, 1, 1 */
 
 /*
  * We set 66 MHz for all MWDMA modes
@@ -148,6 +148,8 @@
 	u8 timreg;
 	u8 i;
 
+	dev_info(ftide->dev, "ftide010_set_dmamode devno=%i, speed=0x%02x\n", devno, speed);
+
 	/* Target device 0 (master) or 1 (slave) */
 	if (!devno) {
 		udma_en_mask = FTIDE010_CLK_MOD_DEV0_UDMA_EN;
@@ -221,6 +223,8 @@
 	struct ftide010 *ftide = ap->host->private_data;
 	u8 pio = adev->pio_mode - XFER_PIO_0;
 
+	dev_info(ftide->dev, "ftide010_set_piomode index=%i\n", pio);
+
 	dev_dbg(ftide->dev, "set PIO mode %02x, index %d\n",
 		adev->pio_mode, pio);
 	writeb(pio_active_time[pio] << 4 | pio_recovery_time[pio],
